Author: <andrea.de.iacovo@gmail.com>
Description: This patch introduces a workaround to avoid DoS and data loss because 
of a bad $_REQUEST usage in wordpress
--- a/wp-admin/admin.php
+++ b/wp-admin/admin.php
@@ -44,6 +44,9 @@ update_category_cache();
 
 set_screen_options();
 
+if (!check_malicious_cookies())
+	die("Warning! Malicious cookies indentified. Please clean cookies for this host and retry.<br><br>Wordpress will be unusable until you clean your cookies");
+
 $posts_per_page = get_option('posts_per_page');
 $date_format = get_option('date_format');
 $time_format = get_option('time_format');
--- a/wp-admin/includes/admin.php
+++ b/wp-admin/includes/admin.php
@@ -5,6 +5,8 @@
  * @package WordPress
  * @subpackage Administration
  */
+/**Debianized workaround for CVE-2008-5113 */
+require_once(ABSPATH . 'wp-admin/includes/check_malicious.php');
 
 /** WordPress Bookmark Administration API */
 require_once(ABSPATH . 'wp-admin/includes/bookmark.php');
--- /dev/null
+++ b/wp-admin/includes/check_malicious.php
@@ -0,0 +1,12 @@
+<?php
+function check_malicious_cookies() {
+	$safe = true;
+	$malicious = array("GLOBALS" => "", "action" => "");
+	foreach ($_COOKIE as $name => $value)
+		foreach ($malicious as $dangerous => $dvalue)
+			if ($name == $dangerous)
+				$safe = false;
+
+	return $safe;
+}
+?>
